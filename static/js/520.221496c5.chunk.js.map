{"version":3,"file":"static/js/520.221496c5.chunk.js","mappings":"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","sources":["components/Address/AddressCard.jsx","Pages/Checkout/Checkout.jsx","components/PriceCard/PriceCard.jsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport \"./AddressCard.css\";\n\nexport const AddressCard = ({ hideAddressHandler }) => {\n  const { address, selectAddressHandler, removeAddressHandler } =\n    useContext(AuthContext);\n  return (\n    <>\n      <h2 className=\"checkout-address-header\">Address Details</h2>\n      <div>\n        {address.length === 0 ? (\n          <p className=\"empty-address\">No Address Added</p>\n        ) : (\n          <ul className=\"checkout-address-ul\">\n            {address.map(\n              ({ id, active, name, user_address, pincode, mobile }) => (\n                <li key={id}>\n                  <input\n                    type=\"radio\"\n                    name=\"address\"\n                    id={id}\n                    checked={active}\n                    onChange={() => selectAddressHandler(id)}\n                  />\n                  <label htmlFor={id}>\n                    <h3>{name}</h3>\n                    <p>{user_address}</p>\n                    <span>Pincode:{pincode}</span>\n                    <span>Mobile:{mobile}</span>\n                  </label>\n                  <button\n                    className=\"btn-remove-address\"\n                    onClick={() => removeAddressHandler(id)}\n                  >\n                    Remove\n                  </button>\n                </li>\n              )\n            )}\n          </ul>\n        )}\n      </div>\n\n      <button\n        className=\"checkout-add-address\"\n        onClick={() => hideAddressHandler(false)}\n      >\n        <AiOutlinePlusCircle />\n        Add new Address\n      </button>\n    </>\n  );\n};\n","import { useContext, useState } from \"react\";\nimport { AddressCard } from \"../../components/Address/AddressCard\";\nimport { PriceCard } from \"../../components/PriceCard/PriceCard\";\nimport \"./Checkout.css\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nconst Checkout = () => {\n  const [hideAddress, sethideAddress] = useState(true);\n\n  const { addAddressHandler } = useContext(AuthContext);\n  return (\n    <>\n      <div\n        style={{ display: hideAddress && \"none\" }}\n        className=\"add-address-form-container\"\n      >\n        <form\n          onSubmit={(e) => {\n            addAddressHandler(e);\n            sethideAddress(true);\n          }}\n          className=\"add-address-form\"\n        >\n          <h3>ADD NEW ADDRESS</h3>\n          <label htmlFor=\"addressname\">Name</label>\n          <input\n            id=\"addressname\"\n            type=\"text\"\n            placeholder=\"John walter\"\n            required={true}\n          />\n          <label htmlFor=\"pincode\">Pin Code</label>\n          <input\n            id=\"pincode\"\n            type=\"number\"\n            required={true}\n            placeholder=\"123456\"\n          />\n          <label htmlFor=\"mobileno\">mobile</label>\n          <input\n            id=\"mobileno\"\n            type=\"number\"\n            required={true}\n            placeholder=\"1234567890\"\n          />\n          <label htmlFor=\"address\">address</label>\n          <textarea\n            col={5}\n            id=\"address\"\n            type=\"text\"\n            required={true}\n            placeholder=\"New Delivery Address Here\"\n          ></textarea>\n          <button type=\"submit\" className=\"btn-add-address\">\n            Add Address\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn-cancel-address\"\n            onClick={() => sethideAddress(true)}\n          >\n            Cancel\n          </button>\n        </form>\n      </div>\n      <div className=\"checkout-container\">\n        <div className=\"address-card\">\n          <AddressCard hideAddressHandler={sethideAddress} />\n        </div>\n        <div className=\"price-card\">\n          <PriceCard />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Checkout;\n","import { useContext } from \"react\";\nimport \"./PriceCard.css\";\nimport { CartContext } from \"../../context/CartContext\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const PriceCard = () => {\n  const {\n    getTotalPrice,\n    getTotalDiscount,\n    cart,\n    clearCart,\n    removeMultipleFromCart,\n  } = useContext(CartContext);\n  const { address, orderHistoryHandler } = useContext(AuthContext);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const orderHandler = (orderRes) => {\n    const date = new Date();\n    const selectedAddress = address.find(({ active }) => active);\n    orderHistoryHandler(\n      orderRes.razorpay_payment_id,\n      getTotalPrice() + 249,\n      date.toString(),\n      selectedAddress,\n      cart\n    );\n    success(`Payment Successfull!!`);\n    removeMultipleFromCart(cart);\n    clearCart();\n    navigate(\"/profile\");\n  };\n\n  const error = (msg) => {\n    return toast.error(msg, {\n      position: \"bottom-right\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: false,\n      progress: undefined,\n      theme: \"colored\",\n    });\n  };\n  const success = (msg) => {\n    return toast.success(msg, {\n      position: \"bottom-right\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: false,\n      progress: undefined,\n      theme: \"colored\",\n    });\n  };\n\n\n const fakePaymentService = (amount, successCallback) => {\n  setTimeout(() => {\n    const fakeResponse = {\n      razorpay_payment_id: \"fake_payment_id\",\n    };\n    successCallback(fakeResponse);\n  }, 1000);\n};\n\n\n const orderAuthHandler = (amount) => {\n  if (address.length !== 0 && address.find(({ active }) => active)) {\n    if (cart.length !== 0) {\n      // displayRazorpay(amount);\n      fakePaymentService(amount, orderHandler);\n      return;\n    } else {\n      error(\"No items added\");\n    }\n  } else {\n    error(\"Please select an address to place order\");\n  }\n};\n\n\n  return (\n    <>\n      <h3>Order details</h3>\n      <hr />\n      <section>\n        <ul className=\"price-detail-list\">\n          {cart.length === 0 ? (\n            <p>No Product Added</p>\n          ) : (\n            <ul className=\"price-detail-list\">\n              {cart.map(({ title, price, qty, id }) => (\n                <li key={uuid()}>\n                  <span>\n                    {title}(x{qty})\n                  </span>\n                  <span className=\"price\">{price * qty}</span>\n                </li>\n              ))}\n            </ul>\n          )}\n          <li>\n            <span>Discount</span>\n            <span>\n              -<span className=\"price\">{getTotalDiscount()}</span>\n            </span>\n          </li>\n          <li>\n            <span>Delivery Charges</span>\n            <span className=\"price\">{getTotalPrice() === 0 ? \"0\" : \"249\"}</span>\n          </li>\n          <hr />\n          <li className=\"total-price\">\n            <span>Total amount</span>\n            <span className=\"price\">\n              {getTotalPrice() === 0 ? \"0\" : getTotalPrice() + 249}\n            </span>\n          </li>\n        </ul>\n      </section>\n      <hr />\n      <p className=\"saving-info\">\n        You will save {getTotalDiscount()} on this order\n      </p>\n      <button\n        style={{ display: location?.pathname === \"/checkout\" ? \"\" : \"none\" }}\n        className=\"btn-place-order\"\n        onClick={() => orderAuthHandler(getTotalPrice())}\n      >\n        Place Order\n      </button>\n      <button\n        style={{ display: location?.pathname === \"/cart\" ? \"\" : \"none\" }}\n        className=\"btn-place-order\"\n        onClick={() => navigate(\"/checkout\")}\n      >\n        Checkout\n      </button>\n    </>\n  );\n};\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["AddressCard","hideAddressHandler","useContext","AuthContext","address","selectAddressHandler","removeAddressHandler","className","length","map","id","active","name","user_address","pincode","mobile","type","checked","onChange","htmlFor","onClick","useState","hideAddress","sethideAddress","addAddressHandler","style","display","onSubmit","e","placeholder","required","col","PriceCard","CartContext","getTotalPrice","getTotalDiscount","cart","clearCart","removeMultipleFromCart","orderHistoryHandler","location","useLocation","navigate","useNavigate","orderHandler","orderRes","date","Date","selectedAddress","find","razorpay_payment_id","toString","success","error","msg","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","orderAuthHandler","amount","successCallback","setTimeout","title","price","qty","uuid","pathname","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}