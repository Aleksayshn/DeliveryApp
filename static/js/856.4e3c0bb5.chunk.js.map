{"version":3,"file":"static/js/856.4e3c0bb5.chunk.js","mappings":"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","sources":["Pages/OrderHistory/OrderHistory.jsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router\";\nimport { v4 as uuid } from \"uuid\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport \"./OrderHistory.css\";\nimport Lottie from \"lottie-react\";\nimport empty from \"../../assets/animation/empty.json\";\nimport instance from 'constants/apiDefault';\n\nconst OrderHistory = () => {\n  const [orderHistory, setOrderHistory] = useState([]);\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n\nconst getOrderHistory = async () => {\n  setIsLoading(true);\n  try {\n    const token = localStorage.getItem(\"token\");\n    const auth = {\n      'Authorization': `Bearer ${token}`\n    };\n    const response = await instance.get(\"/user/order\", {\n      headers: { ...auth, \"Content-Type\": \"application/json\" },\n    });\n    const { data } = response.data;\n    const cartData = data.orders;\n    if (response.status === 200) {\n      setOrderHistory(cartData);\n    } else {\n      console.error(data);\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n    setIsLoading(false);\n  }\n};\n\n  useEffect(() => {\n    getOrderHistory();\n  }, []);\n\n   return (\n     <div>\n       {isLoading ? (\n         <CircularProgress color=\"primary\" size={50} />\n       ) : (\n\n        <div className=\"order-history\">\n        <h2 className=\"order-history-heading\">Your Orders</h2>\n        {orderHistory.length === 0 ? (\n          <Lottie\n            className=\"profile-empty-order\"\n            animationData={empty}\n            loop={true}\n          />\n        ) : (\n          <ul className=\"order-history-listing\">\n            {orderHistory.map(\n              ({\n                orderId,\n                paymentId,\n                orderDate,\n                deliveryAddress,\n                totalAmount,\n                cart,\n              }) => (\n                <li className=\"order-history-listing-li\" key={uuid()}>\n                  <h3>Order ID: {orderId}</h3>\n                  <p>Order date:{orderDate.slice(0, 16)}</p>\n                  <hr />\n                  <ol>\n                    {cart.map(\n                      ({ _id, image, title, price, description, qty }) => (\n                        <li\n                          className=\"order-cart-item\"\n                          key={_id}\n                          onClick={() => navigate(`/products/${_id}`)}\n                        >\n                          <img src={image} alt={description} />\n                          <div className=\"order-cart-item-div\">\n                            <div>\n                              <p>{title}</p>\n                              <p>{description}</p>\n                              <span className=\"order-item-quantity\">\n                                Qty:{qty}\n                              </span>\n                            </div>\n                            <p className=\"order-cart-item-price\">{price}</p>\n                          </div>\n                        </li>\n                      )\n                    )}\n                  </ol>\n                  <hr />\n                  <div className=\"payment-address-div\">\n                    <section>\n                      <h4>Payment</h4>\n                      <p>Payment ID : {paymentId}</p>\n                      <p>\n                        Amount Paid :{\" \"}\n                        <span className=\"payment-amount-paid\">\n                          {totalAmount}\n                        </span>\n                      </p>\n                    </section>\n                    <section>\n                      <h4>Delivery</h4>\n                      <span>Address</span>\n                      <p>{deliveryAddress?.name}</p>\n                      <p>{deliveryAddress?.user_address}</p>\n                      <p>Pincode:{deliveryAddress?.pincode}</p>\n                      <p>Contact No:{deliveryAddress?.mobile}</p>\n                    </section>\n                  </div>\n                </li>\n              )\n            )}\n          </ul>\n        )}\n         </div>\n       )}\n     </div>\n   );\n};\n\nexport default OrderHistory;\n\n\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["useState","orderHistory","setOrderHistory","navigate","useNavigate","isLoading","setIsLoading","getOrderHistory","token","localStorage","getItem","auth","instance","headers","response","data","cartData","orders","status","console","error","useEffect","CircularProgress","color","size","className","length","animationData","empty","loop","map","orderId","paymentId","orderDate","deliveryAddress","totalAmount","cart","slice","_id","image","title","price","description","qty","onClick","src","alt","name","user_address","pincode","mobile","uuid","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}