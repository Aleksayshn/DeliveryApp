{"version":3,"file":"static/js/714.eae2a56a.chunk.js","mappings":"6NA0FA,EArFc,WACZ,IAAMA,GAAUC,EAAAA,EAAAA,UAChB,GAAyCC,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,iBACdC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACW,IAAD,EAAdX,MACF,OAAII,QAAJ,IAAIA,GAAJ,UAAIA,EAAUQ,aAAd,OAAI,EAAiBC,SACnBX,EAASE,EAASQ,MAAMC,UAExBX,EAAS,KAGd,GAAE,CAACF,EAAYI,EAAUF,IAsB1B,OACE,+BACE,kBAAMY,SAPW,SAACC,GACpBA,EAAMC,iBACNf,EAAiBc,EAAOR,EAAOE,EAChC,EAIiCQ,UAAU,kBAAxC,WACE,eAAIA,UAAU,gBAAd,oBACA,kBAAOA,UAAU,cAAcC,QAAQ,YAAvC,4BAGA,kBACED,UAAU,cACVE,KAAK,QACLC,YAAY,oBACZC,GAAG,YACHC,MAAOf,EACPgB,SA1BkB,SAACC,GACzBhB,EAASgB,EAAEC,OAAOH,MACnB,EAyBOI,UAAU,KAEZ,kBAAOT,UAAU,cAAcC,QAAQ,eAAvC,uBAGA,kBACED,UAAU,cACVE,KAAK,WACLG,MAAOb,EACPc,SAhCqB,SAACC,GAC5Bd,EAAYc,EAAEC,OAAOH,MACtB,EA+BOF,YAAY,aACZC,GAAG,eACHK,UAAU,KAEZ,mBAAQP,KAAK,SAASF,UAAU,eAAhC,oBAGA,mBACEU,QAAS,SAACH,GAAD,OApDK,SAACI,EAAUC,EAAOL,GAAgB,IAAD,uBAATM,EAAS,iCAATA,EAAS,kBACrDC,aAAanC,EAAQoC,SACrBpC,EAAQoC,QAAUC,YAAW,WAC3BL,EAAQ,WAAR,GAASJ,GAAT,OAAeM,GAChB,GAAED,EACJ,CAgDSK,CAAcjC,EAAkB,IAAKuB,EAAG,wBAAyB,YAD1D,EAGTP,UAAU,eAJZ,0CAQA,SAAC,KAAD,CAAMA,UAAU,aAAakB,GAAG,UAAhC,sCAMP,C","sources":["Pages/Login/Login.jsx"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nconst Login = () => {\n  const timerId = useRef();\n  const { checkLogin, authenticateUser } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    if (checkLogin()) {\n      if (location?.state?.pathname) {\n        navigate(location.state.pathname);\n      } else {\n        navigate(\"/\");\n      }\n    }\n  }, [checkLogin, location, navigate]);\n\n  const debounceClick = (callback, delay, e, ...args) => {\n    clearTimeout(timerId.current);\n    timerId.current = setTimeout(() => {\n      callback(e, ...args);\n    }, delay);\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    authenticateUser(event, email, password);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"login-container\">\n        <h2 className=\"login-heading\">Login</h2>\n        <label className=\"login-label\" htmlFor=\"userEmail\">\n          Email Address\n        </label>\n        <input\n          className=\"login-input\"\n          type=\"email\"\n          placeholder=\"example@gmail.com\"\n          id=\"userEmail\"\n          value={email}\n          onChange={handleEmailChange}\n          required={true}\n        />\n        <label className=\"login-label\" htmlFor=\"userPassword\">\n          Password\n        </label>\n        <input\n          className=\"login-input\"\n          type=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n          placeholder=\"**********\"\n          id=\"userPassword\"\n          required={true}\n        />\n        <button type=\"submit\" className=\"login-button\">\n          Login\n        </button>\n        <button\n          onClick={(e) =>\n            debounceClick(authenticateUser, 700, e, \"testFirst@example.com\", \"123456789\")\n          }\n          className=\"login-button\"\n        >\n          Login with Test Credentials\n        </button>\n        <Link className=\"login-link\" to=\"/signup\">\n          Create New Account &gt;\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["timerId","useRef","useContext","AuthContext","checkLogin","authenticateUser","navigate","useNavigate","location","useLocation","useState","email","setEmail","password","setPassword","useEffect","state","pathname","onSubmit","event","preventDefault","className","htmlFor","type","placeholder","id","value","onChange","e","target","required","onClick","callback","delay","args","clearTimeout","current","setTimeout","debounceClick","to"],"sourceRoot":""}