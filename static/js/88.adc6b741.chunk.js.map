{"version":3,"file":"static/js/88.adc6b741.chunk.js","mappings":"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","sources":["components/address-component/AddressCard.jsx","Pages/Checkout.jsx","components/price-component/PriceCard.jsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { AuthContext } from \"../../Context/AuthContext\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport \"./AddressCard.css\";\n\nexport const AddressCard = ({ hideAddressHandler }) => {\n  const { address, selectAddressHandler, removeAddressHandler } =\n    useContext(AuthContext);\n  return (\n    <>\n      <h2 className=\"checkout-address-header\">Address Details</h2>\n      <div>\n        {address.length === 0 ? (\n          <p className=\"empty-address\">No Address Added</p>\n        ) : (\n          <ul className=\"checkout-address-ul\">\n            {address.map(\n              ({ id, active, name, user_address, pincode, mobile }) => (\n                <li key={id}>\n                  <input\n                    type=\"radio\"\n                    name=\"address\"\n                    id={id}\n                    checked={active}\n                    onChange={() => selectAddressHandler(id)}\n                  />\n                  <label htmlFor={id}>\n                    <h3>{name}</h3>\n                    <p>{user_address}</p>\n                    <span>Pincode:{pincode}</span>\n                    <span>Mobile:{mobile}</span>\n                  </label>\n                  <button\n                    className=\"btn-remove-address\"\n                    onClick={() => removeAddressHandler(id)}\n                  >\n                    Remove\n                  </button>\n                </li>\n              )\n            )}\n          </ul>\n        )}\n      </div>\n\n      <button\n        className=\"checkout-add-address\"\n        onClick={() => hideAddressHandler(false)}\n      >\n        <AiOutlinePlusCircle />\n        Add new Address\n      </button>\n    </>\n  );\n};\n","import { useContext, useState } from \"react\";\nimport { AddressCard } from \"../components/address-component/AddressCard\";\nimport { PriceCard } from \"../components/price-component/PriceCard\";\nimport \"./Checkout.css\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\nconst Checkout = () => {\n  const [hideAddress, sethideAddress] = useState(true);\n\n  const { addAddressHandler } = useContext(AuthContext);\n  return (\n    <>\n      <div\n        style={{ display: hideAddress && \"none\" }}\n        className=\"add-address-form-container\"\n      >\n        <form\n          onSubmit={(e) => {\n            addAddressHandler(e);\n            sethideAddress(true);\n          }}\n          className=\"add-address-form\"\n        >\n          <h3>ADD NEW ADDRESS</h3>\n          <label htmlFor=\"addressname\">Name</label>\n          <input\n            id=\"addressname\"\n            type=\"text\"\n            placeholder=\"John walter\"\n            required={true}\n          />\n          <label htmlFor=\"pincode\">Pin Code</label>\n          <input\n            id=\"pincode\"\n            type=\"number\"\n            required={true}\n            placeholder=\"123456\"\n          />\n          <label htmlFor=\"mobileno\">mobile</label>\n          <input\n            id=\"mobileno\"\n            type=\"number\"\n            required={true}\n            placeholder=\"1234567890\"\n          />\n          <label htmlFor=\"address\">address</label>\n          <textarea\n            col={5}\n            id=\"address\"\n            type=\"text\"\n            required={true}\n            placeholder=\"New Delivery Address Here\"\n          ></textarea>\n          <button type=\"submit\" className=\"btn-add-address\">\n            Add Address\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn-cancel-address\"\n            onClick={() => sethideAddress(true)}\n          >\n            Cancel\n          </button>\n        </form>\n      </div>\n      <div className=\"checkout-container\">\n        <div className=\"address-card\">\n          <AddressCard hideAddressHandler={sethideAddress} />\n        </div>\n        <div className=\"price-card\">\n          <PriceCard />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Checkout;","import { useContext } from \"react\";\nimport \"./PriceCard.css\";\nimport { CartContext } from \"../../Context/CartContext\";\nimport { useLocation, useNavigate } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { AuthContext } from \"../../Context/AuthContext\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const PriceCard = () => {\n  const {\n    getTotalPrice,\n    getTotalDiscount,\n    cart,\n    clearCart,\n    removeMultipleFromCart,\n  } = useContext(CartContext);\n  const { address, orderHistoryHandler } = useContext(AuthContext);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const orderHandler = (orderRes) => {\n    const date = new Date();\n    const selectedAddress = address.find(({ active }) => active);\n    orderHistoryHandler(\n      orderRes.razorpay_payment_id,\n      getTotalPrice() + 249,\n      date.toString(),\n      selectedAddress,\n      cart\n    );\n    success(`Payment Successfull!!`);\n    removeMultipleFromCart(cart);\n    clearCart();\n    navigate(\"/profile\");\n  };\n\n  const error = (msg) => {\n    return toast.error(msg, {\n      position: \"bottom-right\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: false,\n      progress: undefined,\n      theme: \"colored\",\n    });\n  };\n  const success = (msg) => {\n    return toast.success(msg, {\n      position: \"bottom-right\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: false,\n      pauseOnHover: true,\n      draggable: false,\n      progress: undefined,\n      theme: \"colored\",\n    });\n  };\n\n\n const fakePaymentService = (amount, successCallback) => {\n  setTimeout(() => {\n    const fakeResponse = {\n      razorpay_payment_id: \"fake_payment_id\",\n    };\n    successCallback(fakeResponse);\n  }, 1000);\n};\n\n\n const orderAuthHandler = (amount) => {\n  if (address.length !== 0 && address.find(({ active }) => active)) {\n    if (cart.length !== 0) {\n      // displayRazorpay(amount);\n      fakePaymentService(amount, orderHandler);\n      return;\n    } else {\n      error(\"No items added\");\n    }\n  } else {\n    error(\"Please select an address to place order\");\n  }\n};\n\n\n  return (\n    <>\n      <h3>Order details</h3>\n      <hr />\n      <section>\n        <ul className=\"price-detail-list\">\n          {cart.length === 0 ? (\n            <p>No Product Added</p>\n          ) : (\n            <ul className=\"price-detail-list\">\n              {cart.map(({ title, price, qty, id }) => (\n                <li key={uuid()}>\n                  <span>\n                    {title}(x{qty})\n                  </span>\n                  <span className=\"price\">{price * qty}</span>\n                </li>\n              ))}\n            </ul>\n          )}\n          <li>\n            <span>Discount</span>\n            <span>\n              -<span className=\"price\">{getTotalDiscount()}</span>\n            </span>\n          </li>\n          <li>\n            <span>Delivery Charges</span>\n            <span className=\"price\">{getTotalPrice() === 0 ? \"0\" : \"249\"}</span>\n          </li>\n          <hr />\n          <li className=\"total-price\">\n            <span>Total amount</span>\n            <span className=\"price\">\n              {getTotalPrice() === 0 ? \"0\" : getTotalPrice() + 249}\n            </span>\n          </li>\n        </ul>\n      </section>\n      <hr />\n      <p className=\"saving-info\">\n        You will save {getTotalDiscount()} on this order\n      </p>\n      <button\n        style={{ display: location?.pathname === \"/checkout\" ? \"\" : \"none\" }}\n        className=\"btn-place-order\"\n        onClick={() => orderAuthHandler(getTotalPrice())}\n      >\n        Place Order\n      </button>\n      <button\n        style={{ display: location?.pathname === \"/cart\" ? \"\" : \"none\" }}\n        className=\"btn-place-order\"\n        onClick={() => navigate(\"/checkout\")}\n      >\n        Checkout\n      </button>\n    </>\n  );\n};\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["AddressCard","_ref","hideAddressHandler","_useContext","useContext","AuthContext","address","selectAddressHandler","removeAddressHandler","_jsxs","_Fragment","children","_jsx","className","length","map","_ref2","id","active","name","user_address","pincode","mobile","type","checked","onChange","htmlFor","onClick","AiOutlinePlusCircle","_useState","useState","_useState2","_slicedToArray","hideAddress","sethideAddress","addAddressHandler","style","display","onSubmit","e","placeholder","required","col","PriceCard","CartContext","getTotalPrice","getTotalDiscount","cart","clearCart","removeMultipleFromCart","_useContext2","orderHistoryHandler","location","useLocation","navigate","useNavigate","orderHandler","orderRes","date","Date","selectedAddress","find","razorpay_payment_id","toString","success","error","msg","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","orderAuthHandler","amount","successCallback","setTimeout","_ref3","title","price","qty","uuid","pathname","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","slice","unsafeStringify","arr","offset","arguments","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}